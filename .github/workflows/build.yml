##########
# GITHUB #
##########

# Current workflow
# https://github.com/cylmat/phpconfig/actions

# DOC
# https://github.com/actions/starter-workflows/

name: PHP Composer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

###
# Jobs
###
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and test
    strategy:
      fail-fast: false
      matrix:
          php: [7.3, 7.4]

    steps:
    - uses: actions/checkout@v2

    # Php, composer, ext, xdebug
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        coverage: xdebug
        extensions: mbstring, intl
        php-version: "${{ matrix.php }}"

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install composer dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      # --no-plugins avoid to install grumphp's git hook
      run: composer install --prefer-dist --no-progress --no-plugins

    ###########
    # TESTING #
    ###########
    - name: Run GrumPhp lints
      run: ./vendor/bin/grumphp run --testsuite=lint

    - name: Run GrumPhp tests
      run: ./vendor/bin/grumphp run --testsuite=tests

    ############
    # COVERAGE #
    ############
    - name: Generate coverage.xml
      run: ./vendor/bin/phpunit --coverage-filter src --coverage-clover coverage.xml

    - name: Codecov
      env: 
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

    ############
    # DEPLOYER #
    ############
    - name: Deploy code
      run: |
        make deployer-bin
        dep deploy